name: Build MacOS Executable and Publish Release

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: macos-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Install pyinstaller
      run: |
        pip install pyinstaller

    - name: Build executable
      run: pyinstaller --onefile main.py

    - name: Get latest commit message
      id: commit_message
      run: echo "::set-output name=message::$(git log --format=%B -n 1 ${{ github.sha }})"
    
    - name: Create Release
      id: create_release
      uses: actions/github-script@v4
      with:
        github-token: ${{ secrets.TOKEN_FOR_PUBLIC }}
        script: |
          const { data: latestRelease } = await github.repos.getLatestRelease({
            owner: context.repo.owner,
            repo: context.repo.repo
          });
          const newVersion = (latestRelease ? latestRelease.tag_name : 'v0.0.0').replace('v', '').split('.').map(Number);
          newVersion[2]++;
          const tagName = `v${newVersion.join('.')}`;
          const releaseName = tagName;
          await github.repos.createRelease({
            owner: context.repo.owner,
            repo: context.repo.repo,
            tag_name: tagName,
            name: releaseName,
            body: ${{ steps.commit_message.outputs.message }},
            draft: false,
            prerelease: false
          });
          console.log(`Created release ${tagName}`);
    
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        TOKEN_FOR_PUBLIC: ${{ secrets.TOKEN_FOR_PUBLIC }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist/main
        asset_name: main.exe
        asset_content_type: application/octet-stream
